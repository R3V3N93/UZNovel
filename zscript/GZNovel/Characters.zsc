class Character play
{
    Array<TextureID> graphics;
    string codeName;
    string name;

    TextureID curGraphic;
    string curName;
    bool isHighlight;
    int state;
    double pos;

    static Character Create(string codeName, string name, Array<TextureID> graphics)
    {
        Character charac = new('Character');
        charac.codeName = codeName;
        charac.name = name;
        charac.graphics.Move(graphics);

        charac.pos = 0.0;
        return charac;
    }

    string Serialize()
    {
        string s = "[";
        s.AppendFormat("codeName = "..codeName..", ");
        s.AppendFormat("name = "..name..", ");
        s.AppendFormat("graphics = [");
        for(int i = 0; i < graphics.Size(); i++)
        {
            s.AppendFormat("[graphic="..Texman.GetName(graphics[i])..", IsValid() = "..(graphics[i].IsValid() ? "true" : "false").."]");
        }
        s.AppendFormat("]]");

        return s;
    }
}

Class CharacterStage play
{
    Array<Character> characters;

    Character FindCharacter(string name)
    {
        foreach(a : characters)
        {
            if(a.name == name)
                return a; // it should return pointers..?
        }
        return null;
    }
}