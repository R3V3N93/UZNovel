class CG
{
    int id;
    TextureID graphic;
    Vector2 pos;
    Vector2 size;
    int pivot;
    int fadeIn;
    int fadeOut;
    int remove;

    static CG Create()
    {
        CG temp = new('CG');
        return temp;
    }
}

class Directive
{
    string codeName;
    string name;
    TextureID graphic;
    int state;
    double pos;
    bool speaker;
    Vector2 size;

    static Directive Create()
    {
        Directive charac = new('Directive');
        return charac;
    }
}

class Page play 
{
    TextureID bg;
    CG cg;
    string sound;
    string music;
    string text;
    int textPivot;
    int time;
    Array<Directive> directives;

    Array<string> remove;
    Array<string> highlight;

    static Page Create()
    {
        Page temp = new('Page');
        return temp;
    }

    string Serialize()
    {
        string s = "[";
        s.AppendFormat("sound = "..sound..", ");
        s.AppendFormat("music = "..music..", ");
        s.AppendFormat("text = "..text..", ");
        s.AppendFormat("time = "..time..", ");
        s.AppendFormat("directives(characters) size = "..directives.Size()..", ");
        s.AppendFormat("bg = [");
        s.AppendFormat("graphic="..Texman.GetName(bg)..", IsValid() = "..(bg.IsValid() ? "true" : "false").."]");
        s.AppendFormat("cg = [");
        s.AppendFormat("graphic="..Texman.GetName(cg.graphic)..", IsValid() = "..(cg.graphic.IsValid() ? "true" : "false").."]");
        s.AppendFormat("]]");

        return s;
    }
}